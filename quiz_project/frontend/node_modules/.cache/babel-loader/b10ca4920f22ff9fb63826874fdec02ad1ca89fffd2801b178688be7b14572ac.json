{"ast":null,"code":"import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nconst apiUrl = \"https://crudapi.co.uk/api/v1/singupData\";\nconst apikey = \"xqV72-moMK_a_u_QJTHyybjqNfiMlQpZaoyCWPP_St1hs-a3Lw\";\nconst headers = {\n  Authorization: `Bearer ${apikey}`\n};\nexport const loginUser = createAsyncThunk(\"user/loginUser\", async email => {\n  try {\n    console.log(email);\n    const request = await axios.get(`${apiUrl}`, {\n      headers\n    });\n    //თუ დაბრუნებულ დატაში იძებნება მერე დაანავიგეითე\n\n    const response = await request.data.items;\n    console.log(response);\n    const userExists = response.some(user => user.email === email);\n    console.log(userExists);\n    if (userExists) {\n      const user = response.filter(user => user.email === email);\n      console.log(user[0]);\n      localStorage.setItem(\"user\", JSON.stringify(user[0]));\n      return user;\n    }\n  } catch (error) {\n    throw new Error(\"Login failed\");\n  }\n});\nconst initialState = {\n  loading: false,\n  user: null,\n  error: null\n};\nconst userSlice = createSlice({\n  name: \"user\",\n  initialState,\n  extraReducers: builder => {\n    builder.addCase(loginUser.pending, state => {\n      state.loading = true;\n      state.user = null;\n      state.error = null;\n    }).addCase(loginUser.fulfilled, (state, action) => {\n      state.loading = false;\n      state.user = action.payload;\n      state.error = null;\n    }).addCase(loginUser.rejected, state => {\n      state.loading = false;\n      state.user = null;\n      state.error = \"Username or password is incorrect\";\n    });\n  }\n});\nexport default userSlice.reducer;","map":{"version":3,"names":["createAsyncThunk","createSlice","axios","apiUrl","apikey","headers","Authorization","loginUser","email","console","log","request","get","response","data","items","userExists","some","user","filter","localStorage","setItem","JSON","stringify","error","Error","initialState","loading","userSlice","name","extraReducers","builder","addCase","pending","state","fulfilled","action","payload","rejected","reducer"],"sources":["/home/joni/Desktop/quiz_project/frontend/src/store/login/UserSlice.js"],"sourcesContent":["import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\n\nconst apiUrl = \"https://crudapi.co.uk/api/v1/singupData\";\nconst apikey = \"xqV72-moMK_a_u_QJTHyybjqNfiMlQpZaoyCWPP_St1hs-a3Lw\";\n\nconst headers = { Authorization: `Bearer ${apikey}` };\n\nexport const loginUser = createAsyncThunk(\"user/loginUser\", async (email) => {\n  try {\n    console.log(email);\n\n    const request = await axios.get(`${apiUrl}`, { headers });\n    //თუ დაბრუნებულ დატაში იძებნება მერე დაანავიგეითე\n\n    const response = await request.data.items;\n    console.log(response);\n\n    const userExists = response.some((user) => user.email === email);\n    console.log(userExists);\n\n    if (userExists) {\n      const user = response.filter((user) => user.email === email);\n      console.log(user[0])\n      localStorage.setItem(\"user\", JSON.stringify(user[0]));\n      return user;\n    }\n  } catch (error) {\n    throw new Error(\"Login failed\");\n  }\n});\n\nconst initialState = {\n  loading: false,\n  user: null,\n  error: null,\n};\n\nconst userSlice = createSlice({\n  name: \"user\",\n  initialState,\n  extraReducers: (builder) => {\n    builder\n      .addCase(loginUser.pending, (state) => {\n        state.loading = true;\n        state.user = null;\n        state.error = null;\n      })\n      .addCase(loginUser.fulfilled, (state, action) => {\n        state.loading = false;\n        state.user = action.payload;\n        state.error = null;\n      })\n      .addCase(loginUser.rejected, (state) => {\n        state.loading = false;\n        state.user = null;\n        state.error = \"Username or password is incorrect\";\n      });\n  },\n});\n\nexport default userSlice.reducer;\n"],"mappings":"AAAA,SAASA,gBAAgB,EAAEC,WAAW,QAAQ,kBAAkB;AAChE,OAAOC,KAAK,MAAM,OAAO;AAEzB,MAAMC,MAAM,GAAG,yCAAyC;AACxD,MAAMC,MAAM,GAAG,oDAAoD;AAEnE,MAAMC,OAAO,GAAG;EAAEC,aAAa,EAAG,UAASF,MAAO;AAAE,CAAC;AAErD,OAAO,MAAMG,SAAS,GAAGP,gBAAgB,CAAC,gBAAgB,EAAE,MAAOQ,KAAK,IAAK;EAC3E,IAAI;IACFC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;IAElB,MAAMG,OAAO,GAAG,MAAMT,KAAK,CAACU,GAAG,CAAE,GAAET,MAAO,EAAC,EAAE;MAAEE;IAAQ,CAAC,CAAC;IACzD;;IAEA,MAAMQ,QAAQ,GAAG,MAAMF,OAAO,CAACG,IAAI,CAACC,KAAK;IACzCN,OAAO,CAACC,GAAG,CAACG,QAAQ,CAAC;IAErB,MAAMG,UAAU,GAAGH,QAAQ,CAACI,IAAI,CAAEC,IAAI,IAAKA,IAAI,CAACV,KAAK,KAAKA,KAAK,CAAC;IAChEC,OAAO,CAACC,GAAG,CAACM,UAAU,CAAC;IAEvB,IAAIA,UAAU,EAAE;MACd,MAAME,IAAI,GAAGL,QAAQ,CAACM,MAAM,CAAED,IAAI,IAAKA,IAAI,CAACV,KAAK,KAAKA,KAAK,CAAC;MAC5DC,OAAO,CAACC,GAAG,CAACQ,IAAI,CAAC,CAAC,CAAC,CAAC;MACpBE,YAAY,CAACC,OAAO,CAAC,MAAM,EAAEC,IAAI,CAACC,SAAS,CAACL,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;MACrD,OAAOA,IAAI;IACb;EACF,CAAC,CAAC,OAAOM,KAAK,EAAE;IACd,MAAM,IAAIC,KAAK,CAAC,cAAc,CAAC;EACjC;AACF,CAAC,CAAC;AAEF,MAAMC,YAAY,GAAG;EACnBC,OAAO,EAAE,KAAK;EACdT,IAAI,EAAE,IAAI;EACVM,KAAK,EAAE;AACT,CAAC;AAED,MAAMI,SAAS,GAAG3B,WAAW,CAAC;EAC5B4B,IAAI,EAAE,MAAM;EACZH,YAAY;EACZI,aAAa,EAAGC,OAAO,IAAK;IAC1BA,OAAO,CACJC,OAAO,CAACzB,SAAS,CAAC0B,OAAO,EAAGC,KAAK,IAAK;MACrCA,KAAK,CAACP,OAAO,GAAG,IAAI;MACpBO,KAAK,CAAChB,IAAI,GAAG,IAAI;MACjBgB,KAAK,CAACV,KAAK,GAAG,IAAI;IACpB,CAAC,CAAC,CACDQ,OAAO,CAACzB,SAAS,CAAC4B,SAAS,EAAE,CAACD,KAAK,EAAEE,MAAM,KAAK;MAC/CF,KAAK,CAACP,OAAO,GAAG,KAAK;MACrBO,KAAK,CAAChB,IAAI,GAAGkB,MAAM,CAACC,OAAO;MAC3BH,KAAK,CAACV,KAAK,GAAG,IAAI;IACpB,CAAC,CAAC,CACDQ,OAAO,CAACzB,SAAS,CAAC+B,QAAQ,EAAGJ,KAAK,IAAK;MACtCA,KAAK,CAACP,OAAO,GAAG,KAAK;MACrBO,KAAK,CAAChB,IAAI,GAAG,IAAI;MACjBgB,KAAK,CAACV,KAAK,GAAG,mCAAmC;IACnD,CAAC,CAAC;EACN;AACF,CAAC,CAAC;AAEF,eAAeI,SAAS,CAACW,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}